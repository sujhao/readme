
#user  nobody;
#user administrator administrators;  #配置用户或者组，默认为nobody nobody。

worker_processes  1; #允许生成的进程数 推荐设置 worker 的个数为 cpu 的核数

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
error_log log/error.log debug;  #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg


events {
    worker_connections  1024;  #最大连接数，默认为512
    accept_mutex on;   #设置网路连接序列化，防止惊群现象发生，默认为on
    multi_accept on;  #设置一个进程是否同时接受多个网络连接，默认为off
}

# $remote_addr 与 $http_x_forwarded_for 用以记录客户端的ip地址；
# $remote_user ：用来记录客户端用户名称；
# $time_local ： 用来记录访问时间与时区；
# $request ： 用来记录请求的url与http协议；
# $status ： 用来记录请求状态；成功是200；
# $body_bytes_s ent ：记录发送给客户端文件主体内容大小；
# $http_referer ：用来记录从那个页面链接访问过来的；
# $http_user_agent ：记录客户端浏览器的相关信息；

http {
    include       mime.types;     #文件扩展名与文件类型映射表
    default_type  application/octet-stream; #默认文件类型，默认为text/plain

    #access_log off; #取消服务日志  

    log_format myFormat '$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'; #自定义log格式
    
    access_log log/access.log myFormat;  #combined为日志格式的默认值
    #access_log  logs/access.log  main;

    sendfile        on; #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。
    sendfile_max_chunk 100k;  #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;   #连接超时时间，默认为75s，可以在http，server，location块。

    error_page 404 500 502 503 504  https://www.baidu.com; #错误页
    # proxy_intercept_errors on;    #如果被代理服务器返回的状态码为400或者大于400，设置的error_page配置起作用。默认为off。

    # proxy_method get;    #支持客户端的请求方法。post/get；
    # proxy_http_version 1.0 ; #Nginx服务器提供代理服务的http协议版本1.0，1.1，默认设置为1.0版本
    proxy_connect_timeout 1;   #nginx服务器与被代理的服务器建立连接的超时时间，默认60秒
    proxy_read_timeout 1; #nginx服务器想被代理服务器组发出read请求后，等待响应的超时间，默认为60秒。
    proxy_send_timeout 1; #nginx服务器想被代理服务器组发出write请求后，等待响应的超时间，默认为60秒。
    proxy_ignore_client_abort on;  #客户端断网时，nginx服务器是否终端对被代理服务器的请求。默认为off。
    # proxy_ignore_headers "Expires" "Set-Cookie";  #Nginx服务器不处理设置的http相应投中的头域，这里空格隔开可以设置多个
    proxy_headers_hash_max_size 1024; #存放http报文头的哈希表容量上限，默认为512个字符。
    proxy_headers_hash_bucket_size 128; #nginx服务器申请存放http报文头的哈希表容量大小。默认为64个字符。

    # 状态值可以是：error|timeout|invalid_header|http_500|http_502|http_503|http_504|http_404|off
    proxy_next_upstream timeout;  #反向代理upstream中设置的服务器组，出现故障时，被代理服务器返回的状态值。

    proxy_set_header Host $host; #只要用户在浏览器中访问的域名绑定了 VIP VIP 下面有RS；则就用$host ；host是访问URL中的域名和端口  www.taobao.com:80
    proxy_set_header X-Real-IP $remote_addr;  #把源IP 【$remote_addr,建立HTTP连接header里面的信息】赋值给X-Real-IP;这样在代码中 $X-Real-IP来获取 源IP

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;#在nginx 作为代理服务器时，设置的IP列表，会把经过的机器ip，代理机器ip都记录下来，用 【，】隔开；代码中用 echo $x-forwarded-for |awk -F, '{print $1}' 来作为源IP

    #gzip  on;

    # 负载均衡
    # upstream mysvr { 
    #     server 127.0.0.1:7878; 
    #     server 192.168.10.121:3333 backup;  #热备  AAAAAA突然A挂啦，BBBBBBBBBBBBBB.....
    # }

    # upstream mysvr { 
    #     server 192.168.10.121:3333;
    #     server 192.168.10.122:3333;       #轮询ABABABABAB
    # } 
    # upstream mysvr { 
    #     server 127.0.0.1:7878 weight=1;
    #     server 192.168.10.121:3333 weight=2; #加权轮询ABBABBABBABBABB
    # }


    # upstream mysvr { 
    #     server 127.0.0.1:7878; 
    #     server 192.168.10.121:3333;
    #     ip_hash;   #ip_hash:nginx会让相同的客户端ip请求相同的服务器。
    # }
    # server {  
    #     listen          80;  
    #     server_name     sujiehao.club;  
    #     access_log      logs/sujiehao.club.access.log myFormat;  
    #     location / {  
    #         index index.html;  
    #         root /root/work/haowebsite;
    #     }  
    # } 

    server {  
        listen          443;  
        server_name     sujiehao.club;  
        access_log      logs/sujiehao.club.access.log myFormat; 
        ssl_certificate /root/work/ssl/sujiehao.club.crt; #填写你的证书所在的位置
        ssl_certificate_key /root/work/ssl/sujiehao.club.key; #填写你的key所在的位置
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置
        ssl_prefer_server_ciphers on;

        location / {  
            index index.html;  
            root  /root/work/haowebsite; 
        }  
    } 

    server {
        listen 80;
        server_name sujiehao.club; # 你的域名
        # 强制跳转https
        rewrite 301 https://$server_name$request_uri;
    }

}
